{
    "openapi": "3.0.0",
    "info": {
        "title": "CryptoNote API",
        "version": "1.0.0",
        "description": "API documentation for the Secure Notes Sharing Application",
        "contact": {
            "name": "Lakshmi Nadh Makkena",
            "email": "lakshminadh_makkena@student.uml.edu"
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "https://localhost:5000/api",
            "description": "Development server"
        }
    ],
    "paths": {
        "/healthcheck": {
            "get": {
                "tags": [
                    "Health Check"
                ],
                "summary": "Perform a health check",
                "description": "Checks the health of the API.",
                "responses": {
                    "200": {
                        "description": "API is healthy"
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register a new user",
                "description": "Creates a new user in the system.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "user123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered"
                    },
                    "400": {
                        "description": "Invalid input data"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Login user",
                "description": "Authenticates a user and returns a token.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "user123"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/note/{id}": {
            "get": {
                "tags": [
                    "Note"
                ],
                "summary": "Get a note by ID",
                "description": "Retrieves a specific note based on its ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the note"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note found"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            }
        },
        "/user/": {
            "put": {
                "summary": "Edit user details",
                "tags": [
                    "User"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "The updated name of the user"
                                    },
                                    "email": {
                                        "type": "string",
                                        "description": "The updated email of the user"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "The updated password for the user"
                                    }
                                },
                                "example": {
                                    "name": "John Doe",
                                    "email": "johndoe@example.com",
                                    "password": "newpassword123"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User details updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "description": "Success message",
                                            "example": "User details updated successfully."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request, invalid or missing fields",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message",
                                            "example": "Invalid email format."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message",
                                            "example": "Server error while updating user details."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/note": {
            "post": {
                "tags": [
                    "Note"
                ],
                "summary": "Create a new note",
                "description": "Creates a new note. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "My Note Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is the content of the note."
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Note successfully created"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/delete/{id}": {
            "delete": {
                "tags": [
                    "Note"
                ],
                "summary": "Delete a note by ID",
                "description": "Deletes a specific note based on its ID.",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "The ID of the note"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note successfully deleted"
                    },
                    "404": {
                        "description": "Note not found"
                    }
                }
            }
        }
    },
    "tags": []
}